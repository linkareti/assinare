package com.linkare.assinare.sign.asic;

import java.awt.Window;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.ResourceBundle;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.Future;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;

import org.apache.commons.lang3.StringUtils;

import com.linkare.assinare.commons.ui.SignatureStage;
import com.linkare.assinare.sign.KeySupplier;
import com.linkare.assinare.sign.SignatureViewer;
import com.linkare.assinare.sign.SigningKey;
import com.linkare.assinare.sign.model.AssinareDocument;
import com.linkare.assinare.sign.swing.AboutDialog;
import com.linkare.assinare.sign.swing.SwingHelper;

/**
 *
 * @author bnazare
 */
public class ContainerSignatureViewer extends javax.swing.JDialog implements SignatureViewer<List<AssinareDocument>, ASiCSignatureFields> {

    private static final long serialVersionUID = -8865895373583288140L;

    private static final ResourceBundle BUNDLE = ResourceBundle.getBundle("com/linkare/assinare/resourceBundle/Language");

    public static final ASiCSignatureFields DEFAULT_SIG_FIELDS = new ASiCSignatureFields(
            "container.asice",
            BUNDLE.getString("assinare.asics.label.place.inputTextDefault"),
            BUNDLE.getString("assinare.asic.label.signerRole.inputTextDefault"),
            null, null,
            false);

    private final ASiCSignatureFields baseSigOpts;
    private final KeySupplier signingKeysSupplier;
    private final CompletableFuture<ASiCSignatureFields> sigFieldsFuture = new CompletableFuture<>();
    private final CompletableFuture<SigningKey> sigKeyFuture = new CompletableFuture<>();

    public ContainerSignatureViewer(boolean modal, ASiCSignatureFields sigOptions, KeySupplier signingKeysSupplier) {
        super((Window) null, modal ? JDialog.DEFAULT_MODALITY_TYPE : ModalityType.MODELESS);
        baseSigOpts = DEFAULT_SIG_FIELDS.merge(sigOptions);
        this.signingKeysSupplier = signingKeysSupplier;
        initComponents();

        setGlassPane(blockerPanel);
        getGlassPane().setVisible(true);
    }

    @Override
    public void dataReady(List<AssinareDocument> docs) {
        if (!SwingUtilities.isEventDispatchThread()) {
            SwingUtilities.invokeLater(() -> {
                getGlassPane().setVisible(false);
                destNameTextField.requestFocusInWindow();
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        helpPopupMenu = new javax.swing.JPopupMenu();
        manualMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();
        blockerPanel = new com.linkare.assinare.sign.swing.BlockerPanel();
        aboutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        destNameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        locationTextField = new javax.swing.JTextField();
        jCheckBoxLTV = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        claimedRoleTextField = new javax.swing.JTextField();
        commitmentTypeComboBox = new javax.swing.JComboBox<>();
        deckCards = new com.linkare.assinare.sign.swing.DeckCardsPanel();

        helpPopupMenu.setName("helpPopupMenu"); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/linkare/assinare/resourceBundle/Language"); // NOI18N
        manualMenuItem.setText(bundle.getString("assinare.label.operation")); // NOI18N
        manualMenuItem.setName("manualMenuItem"); // NOI18N
        manualMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualMenuItemActionPerformed(evt);
            }
        });
        helpPopupMenu.add(manualMenuItem);

        aboutMenuItem.setText(bundle.getString("assinare.label.about")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpPopupMenu.add(aboutMenuItem);

        blockerPanel.setName("blockerPanel"); // NOI18N

        setTitle("ASSINARE");
        setBackground(new java.awt.Color(100, 100, 100));
        setIconImage(new ImageIcon(getClass().getResource("/icons/assinareIconHeader.png")).getImage());
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        aboutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/helpIcon.png"))); // NOI18N
        aboutButton.setBorderPainted(false);
        aboutButton.setContentAreaFilled(false);
        aboutButton.setFocusPainted(false);
        aboutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aboutButton.setName("aboutButton"); // NOI18N
        aboutButton.setPreferredSize(new java.awt.Dimension(21, 26));
        aboutButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/helpIconOver.png"))); // NOI18N
        aboutButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/helpIconOver.png"))); // NOI18N
        aboutButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/helpIconOver.png"))); // NOI18N
        aboutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutButtonMouseClicked(evt);
            }
        });

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getSize()-1f));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(bundle.getString("assinare.asic.label.filename")); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel1.setName("jLabel1"); // NOI18N

        destNameTextField.setText(baseSigOpts.getContainerName());
        destNameTextField.setName("destNameTextField"); // NOI18N

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getSize()-1f));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(bundle.getString("assinare.asic.label.signingPlace")); // NOI18N
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel4.setName("jLabel4"); // NOI18N

        locationTextField.setText(baseSigOpts.getLocation());
        locationTextField.setName("locationTextField"); // NOI18N

        jCheckBoxLTV.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxLTV.setSelected(baseSigOpts.isArchiving());
        jCheckBoxLTV.setText(bundle.getString("assinare.asics.label.longTermValidation")); // NOI18N
        jCheckBoxLTV.setToolTipText("<html>Permite verificar a validade de uma assinatura <br/>\nmuito depois da assinatura do documento");
        jCheckBoxLTV.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBoxLTV.setName("jCheckBoxLTV"); // NOI18N

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getSize()-1f));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(bundle.getString("assinare.asic.label.typeOfCommitment")); // NOI18N
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getSize()-1f));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(bundle.getString("assinare.asic.label.signerRole")); // NOI18N
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel3.setName("jLabel3"); // NOI18N

        claimedRoleTextField.setText(baseSigOpts.getClaimedRoles()[0]);
        claimedRoleTextField.setName("claimedRoleTextField"); // NOI18N

        commitmentTypeComboBox.setModel(getCommitmentTypeModel());
        commitmentTypeComboBox.setSelectedItem(baseSigOpts.getCommitmentType());
        commitmentTypeComboBox.setName("commitmentTypeComboBox"); // NOI18N

        deckCards.setName("deckCards"); // NOI18N
        deckCards.addCancelListener(new com.linkare.assinare.sign.swing.CancelListener() {
            public void actionCanceled(java.awt.event.ActionEvent evt) {
                signatureCanceled(evt);
            }
        });
        deckCards.addConfirmListener(new com.linkare.assinare.sign.swing.ConfirmListener() {
            public void actionConfirmed(java.awt.event.ActionEvent evt) {
                signatureConfirmed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(destNameTextField)
                            .addComponent(jCheckBoxLTV, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                            .addComponent(claimedRoleTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(commitmentTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(locationTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deckCards, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(aboutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(destNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(commitmentTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(claimedRoleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxLTV)
                .addGap(30, 30, 30)
                .addComponent(deckCards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutButtonMouseClicked
        helpPopupMenu.show(evt.getComponent(), -helpPopupMenu.getWidth() + evt.getComponent().getWidth(), evt.getComponent().getHeight());
    }//GEN-LAST:event_aboutButtonMouseClicked

    private void manualMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualMenuItemActionPerformed
        SwingHelper.openUrlInBrowser("http://support.assinare.eu");
    }//GEN-LAST:event_manualMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        AboutDialog.showModal(this, null);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void signatureCanceled(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signatureCanceled
        sigFieldsFuture.cancel(false);
        sigKeyFuture.cancel(false);
    }//GEN-LAST:event_signatureCanceled

    private void signatureConfirmed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signatureConfirmed
        sigFieldsFuture.complete(collectSignatureFields());
        sigKeyFuture.complete(signingKeysSupplier.getKeys().get(0));
    }//GEN-LAST:event_signatureConfirmed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (!sigFieldsFuture.isDone()) {
            sigFieldsFuture.cancel(false);
        }
    }//GEN-LAST:event_formWindowClosing

    void closeWindow() {
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }

    private ComboBoxModel<CommitmentType> getCommitmentTypeModel() {
        CommitmentType[] options = new CommitmentType[CommitmentType.values().length + 1];
        // leave 0 index as null
        System.arraycopy(CommitmentType.values(), 0, options, 1, CommitmentType.values().length);
        return new DefaultComboBoxModel(options);
    }

    boolean isSelectedJCheckBoxLTV() {
        return jCheckBoxLTV.isSelected();
    }

    private ASiCSignatureFields collectSignatureFields() {
        return baseSigOpts.merge(new ASiCSignatureFields(
                StringUtils.stripToNull(destNameTextField.getText()),
                StringUtils.stripToNull(locationTextField.getText()),
                StringUtils.stripToNull(claimedRoleTextField.getText()),
                (CommitmentType) commitmentTypeComboBox.getSelectedItem(),
                null, isSelectedJCheckBoxLTV()));
    }

    @Override
    public Future<ASiCSignatureFields> getSignatureFields() {
        return sigFieldsFuture;
    }

    @Override
    public Future<SigningKey> getSigningKey() {
        return sigKeyFuture;
    }

    @Override
    public void publicPublish(final SignatureStage... chunks) {
        SignatureStage latestStage = chunks[chunks.length - 1];

        if (!SwingUtilities.isEventDispatchThread()) {
            SwingUtilities.invokeLater(() -> {
                deckCards.changePanel(latestStage);
            });
        }
    }

    @Override
    public void signatureDone() {
        closeWindow();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JMenuItem aboutMenuItem;
    private com.linkare.assinare.sign.swing.BlockerPanel blockerPanel;
    private javax.swing.JTextField claimedRoleTextField;
    private javax.swing.JComboBox<CommitmentType> commitmentTypeComboBox;
    private com.linkare.assinare.sign.swing.DeckCardsPanel deckCards;
    private javax.swing.JTextField destNameTextField;
    private javax.swing.JPopupMenu helpPopupMenu;
    private javax.swing.JCheckBox jCheckBoxLTV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JMenuItem manualMenuItem;
    // End of variables declaration//GEN-END:variables
}
