package com.linkare.assinare.sign.swing;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;

import javax.swing.JPanel;

import com.linkare.assinare.commons.ui.SignatureStage;

/**
 *
 * @author bnazare
 */
public class DeckCardsPanel extends JPanel {

    private static final long serialVersionUID = -2418153354205992530L;

    /**
     * Creates new form NewBeanForm2
     */
    public DeckCardsPanel() {
        initComponents();
    }

    public synchronized void addConfirmListener(ConfirmListener l) {
        listenerList.add(ConfirmListener.class, l);
    }

    public synchronized void removeConfirmListener(ConfirmListener l) {
        listenerList.remove(ConfirmListener.class, l);
    }

    public synchronized void addCancelListener(CancelListener l) {
        listenerList.add(CancelListener.class, l);
    }

    public synchronized void removeCancelListener(CancelListener l) {
        listenerList.remove(CancelListener.class, l);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        oKCancelCard = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        progressBarCard = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        cardReadSuccessCard = new javax.swing.JPanel();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        withPinPadMsgCard = new javax.swing.JLabel();

        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                backgroundChanged(evt);
            }
        });
        setLayout(new java.awt.CardLayout());

        cancelButton.setFont(cancelButton.getFont().deriveFont(cancelButton.getFont().getStyle() | java.awt.Font.BOLD));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/linkare/assinare/resourceBundle/Language"); // NOI18N
        cancelButton.setText(bundle.getString("assinare.button.cancel")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setBackground(new java.awt.Color(34, 255, 0));
        okButton.setFont(okButton.getFont().deriveFont(okButton.getFont().getStyle() | java.awt.Font.BOLD));
        okButton.setText(bundle.getString("assinare.button.sign")); // NOI18N
        okButton.setMaximumSize(new java.awt.Dimension(85, 29));
        okButton.putClientProperty(org.pushingpixels.substance.api.SubstanceLookAndFeel.COLORIZATION_FACTOR, 0.75d);
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout oKCancelCardLayout = new javax.swing.GroupLayout(oKCancelCard);
        oKCancelCard.setLayout(oKCancelCardLayout);
        oKCancelCardLayout.setHorizontalGroup(
            oKCancelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oKCancelCardLayout.createSequentialGroup()
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        oKCancelCardLayout.setVerticalGroup(
            oKCancelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(oKCancelCardLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(oKCancelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        add(oKCancelCard, "card2");

        progressBarCard.setRequestFocusEnabled(false);

        jProgressBar1.setIndeterminate(true);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Leitura do Cartão em curso.");

        javax.swing.GroupLayout progressBarCardLayout = new javax.swing.GroupLayout(progressBarCard);
        progressBarCard.setLayout(progressBarCardLayout);
        progressBarCardLayout.setHorizontalGroup(
            progressBarCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        progressBarCardLayout.setVerticalGroup(
            progressBarCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressBarCardLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        add(progressBarCard, "progressBarCard");

        jProgressBar2.setMinimum(100);
        jProgressBar2.setString("100%");

        jLabel4.setBackground(new java.awt.Color(100, 100, 100));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("<html><center>O cartão foi lido com sucesso.</center></html>");

        javax.swing.GroupLayout cardReadSuccessCardLayout = new javax.swing.GroupLayout(cardReadSuccessCard);
        cardReadSuccessCard.setLayout(cardReadSuccessCardLayout);
        cardReadSuccessCardLayout.setHorizontalGroup(
            cardReadSuccessCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4)
        );
        cardReadSuccessCardLayout.setVerticalGroup(
            cardReadSuccessCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardReadSuccessCardLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        add(cardReadSuccessCard, "cardReadSuccessCard");

        withPinPadMsgCard.setText("<html><center>Insira o Pin no Teclado do seu leitor de cartões.</center></html>");
        add(withPinPadMsgCard, "withPinPadMsgCard");
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        for (CancelListener listener : listenerList.getListeners(CancelListener.class)) {
            listener.actionCanceled(evt);
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        for (ConfirmListener listener : listenerList.getListeners(ConfirmListener.class)) {
            listener.actionConfirmed(evt);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void backgroundChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_backgroundChanged
        if (evt.getPropertyName().equals("background")) {
            for (Component component : getComponents()) {
                component.setBackground((Color) evt.getNewValue());
            }
        }
    }//GEN-LAST:event_backgroundChanged

    private void showWithPinPadMsgCard() {
        CardLayout cardLayout = (CardLayout) this.getLayout();
        cardLayout.show(this, "withPinPadMsgCard");
    }

    private void showCardReaderProgressBarCard() {
        CardLayout cardLayout = (CardLayout) this.getLayout();
        cardLayout.show(this, "progressBarCard");
    }

    private void showCardReadSuccessCard() {
        CardLayout cardLayout = (CardLayout) this.getLayout();
        cardLayout.show(this, "cardReadSuccessCard");
    }

    public void changePanel(SignatureStage sigStage) {
        switch (sigStage) {
            case SEARCHING_FOR_CARD:
                showCardReaderProgressBarCard();
                break;
            case CARD_FOUND:
                showCardReadSuccessCard();
                break;
            case WAITING_ON_PINPAD:
                showWithPinPadMsgCard();
                break;
        }
    }

    @Override
    public void setEnabled(boolean enabled) {
        okButton.setEnabled(enabled);
        cancelButton.setEnabled(enabled);
        super.setEnabled(enabled);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel cardReadSuccessCard;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JPanel oKCancelCard;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel progressBarCard;
    private javax.swing.JLabel withPinPadMsgCard;
    // End of variables declaration//GEN-END:variables
}
