<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
  
    <parent>
        <groupId>com.linkare</groupId>
        <artifactId>assinare</artifactId>
        <version>2.7.0</version>
    </parent>
  
    <artifactId>assinare-server</artifactId>
    <name>Assinare - Server</name>
  
    <properties>
        <quarkus-plugin.version>2.0.1.Final</quarkus-plugin.version>
        <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
        <quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
        <quarkus.platform.version>2.0.1.Final</quarkus.platform.version>
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        
        <!-- quarkus docker stuff -->
        <quarkus.container-image.registry>nexus.linkare.com</quarkus.container-image.registry>
        <quarkus.container-image.group>assinare</quarkus.container-image.group>
        <quarkus.container-image.name>assinare-server-jvm</quarkus.container-image.name>
        <!-- defaults to project version -->
        <!--<quarkus.container-image.tag></quarkus.container-image.tag>-->
        
        <sonar.coverage.jacoco.xmlReportPaths>../${aggregate.report.file}</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.coverage.exclusions>src/main/java/com/linkare/assinare/server/nativeimage/**/*.java</sonar.coverage.exclusions>
    </properties>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
  
    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jacoco</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jsonb</artifactId>
        </dependency>
        <dependency>
            <!-- needed for native image compilation as some parts of CXF
            require the servlet API on the class path -->
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-container-image-docker</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-cache</artifactId>
        </dependency>
    
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>${cxf.version}</version>
            <exclusions>
                <exclusion>
                    <!-- avoid Quarkus warnings --> 
                    <groupId>jakarta.xml.bind</groupId>
                    <artifactId>jakarta.xml.bind-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-features-logging</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>assinare-sign</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <!-- avoid Quarkus warnings -->
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
                <exclusion>
                    <!-- avoid multiple implementations of JAXB on the classpath -->
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-core</artifactId>
                </exclusion>
                <exclusion>
                    <!-- avoid multiple implementations of JAXB on the classpath -->
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>assinare-cmd-bindings</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>assinare-test-utils</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-netty-server</artifactId>
            <version>${cxf.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jaxb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>svm</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>pointsto</artifactId>
            <version>21.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.graalvm.compiler</groupId>
            <artifactId>compiler</artifactId>
            <version>21.1.0</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <!-- optional dependency of saaj-impl -->
            <!-- we don't use it but native compilation will fail without it -->
            <groupId>org.jvnet.mimepull</groupId>
            <artifactId>mimepull</artifactId>
            <version>1.9.12</version>
        </dependency>
    </dependencies>
  
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/devmode</directory>
                <targetPath>${project.build.directory}/devmode</targetPath>
            </resource>
        </resources>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-toolchains-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>toolchain</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <toolchains>
                        <jdk>
                            <version>11</version>
                            <vendor>openjdk</vendor>
                        </jdk>
                    </toolchains>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus-plugin.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                        <quarkus.jacoco.report>false</quarkus.jacoco.report>
                    </systemPropertyVariables>
                    <runOrder>alphabetical</runOrder>
                </configuration>
            </plugin>
            <plugin>
                <!-- skip global JaCoCo configuration, let quarkus-jacoco handle it -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                        <maven.home>${maven.home}</maven.home>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
                <quarkus.container-image.name>assinare-server</quarkus.container-image.name>
                <!-- EXPERIMENTAL FLAGS -->
                <!-- enable JNI due to some quirks of PDFBox -->
                <!--<quarkus.native.enable-jni>true</quarkus.native.enable-jni>-->
                <!-- enable standard Java security providers, forces "enable-jni" -->
                <!--<quarkus.native.enable-all-security-services>true</quarkus.native.enable-all-security-services>-->
                <quarkus.native.additional-build-args>-H:Log=registerResource:verbose\,assinareRegistration:</quarkus.native.additional-build-args>
                <!-- enable the URL protocol https -->
                <quarkus.native.enable-https-url-handler>true</quarkus.native.enable-https-url-handler>
                <!-- build native image from inside a container, choose between docker or podman -->
                <quarkus.native.container-runtime>docker</quarkus.native.container-runtime>
            </properties>
        </profile>
        
        <!-- helper profiles to abstract quarkus details -->
        <profile>
            <id>docker</id>
            <activation>
                <property>
                    <name>!skip.docker</name>
                </property>
            </activation>
            
            <properties>
                <quarkus.container-image.build>true</quarkus.container-image.build>
            </properties>
        </profile>        
        <profile>
            <id>docker-push</id>
            <properties>
                <!-- implies container building -->
                <quarkus.container-image.push>true</quarkus.container-image.push>
                <quarkus.docker.cache-from>none</quarkus.docker.cache-from>
            </properties>
        </profile>
    </profiles>
</project>
